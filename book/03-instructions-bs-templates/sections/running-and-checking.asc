=== Running and Checking the Container

Run the Booksquisher Docker image to create a container on your local machine. Also, map the `booksquisher-example-book-templates` book source directory on your local machine to the `/documents` directory _inside_ the container. See below for specific Windows and Linux examples:

```console
$ docker run -it -v <path to booksquisher-example-book-templates directory>:/documents/ marmor/booksquisher
```

For clarity, here are specific examples of the `docker run` command above for both Windows and Linux:

Specific example for Docker for Desktop on Windows (running in Windows PowerShell):

```console
PS C:\Users\marmor> docker run -it -v C:\Users\marmor\Desktop\booksquisher-example-book-templates:/documents/ marmor/booksquisher
```

Specific example for Docker on Linux:

```console
$ docker run -it -v /home/marmor/booksquisher-example-book-templates/:/documents/ marmor/booksquisher
```

Regardless of what operating system you have on your own computer, your terminal should display the Booksquisher welcome and the container's Linux prompt:

```console
** Hi! Welcome to Booksquisher!
** Please see the Booksquisher User's Guide at www.booksquisher.com
[booksquisher]#
```

Booksquisher runs Linux _inside the container_ and that is where we will run the next commands. All the commands below are to be run inside the Docker container Linux terminal at the `[booksquisher]#` prompt, not on your local computer.

Check that we are in the directory `/documents` within the container:

```console
[booksquisher]# pwd
/documents
```

Check that the `booksquisher-example-book-templates` source code is visible when you list the directory with `ls`.

```console
[booksquisher]# ls
README.md
book-template-1-simple
book-template-2-more-complex
```

It is helpful to understand what you see when you list the `/documents` directory as we did above. This directory is *both* on your local computer _and_ inside the Docker container. You see it in the Docker container because we mapped it from your computer into the Docker container with the `docker run` command above. This directory mapping allows the tools in the Docker container to process the book source files on your local computer. Books generated by tools in the container will be written to your local computer through the mapping.

Said in another way, Booksquisher is a pre-configured container for book-building tools such as Asciidoctor, allowing you to process book source code on your computer without actually installing the required software and prerequisites on your operating system. This should begin to make more sense as we generate formatted book output files and view them on your local computer.

Change directory into the first example book template `book-template-1-simple` and then list the source files for that example book. Here we will use the `tree` command instead of `ls` so you can see the structure of the example template:

```console
[booksquisher]# cd book-template-1-simple

[booksquisher]# pwd
/documents/book-template-1-simple

[booksquisher]# tree
.
├── Gemfile
├── README.md
├── Rakefile
├── book
│   ├── 02-name
│   │   └── sections
│   │       └── example-section-to-be-included.asc
│   ├── cover.png
│   └── preface.asc
├── ch01-name.asc
├── ch02-name.asc
├── generated-output
├── images
│   ├── booksquisher-logo.svg
│   └── example-image.png
├── my-book-name.asc
├── research
│   ├── character-sketches
│   │   └── character-sketch-template.txt
│   ├── ideas
│   │   └── ideas-go-here.txt
│   └── setting-sketches
│       └── setting-sketch-template.txt
└── sample-output
    ├── images
    │   ├── booksquisher-logo.svg
    │   └── example-image.png
    ├── my-book-name.epub
    ├── my-book-name.html
    ├── my-book-name.mobi
    └── my-book-name.pdf
```