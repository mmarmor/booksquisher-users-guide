=== Building the Book

Now we are ready to run the build commands for the `progit2` source. A quick review of how this works: We are going to run scripts which are part of the `progit2` source that is on disk on your local computer, but is also mapped into the Docker container as `/documents`. The scripts are going to be run from Linux within the Booksquisher Docker container, which has all the software needed to act on the scripts. The output of the scripts will be formatted book files, which will be placed into the root level of the `/documents` directory in the container, which is the same as root-level of the `progit2` Git repository on your local computer. Said in a much simpler way, the tools in the container are going to put finished book files on your local computer.

.The Next Command Could Take a Few Minutes to Run!
TIP: Depending on your network connection speed, the first time you run `bundle install` may _take as long as 5-minutes_ since the build script for `progit2` fetches the current *development* version of `asciidoctor-epub3` from GitHub as well as Ruby Gem metadata from `rubygems.org`. **You do not get a lot of visual feedback as this is running, so don't panic when it seems stalled--just wait a bit**. The `bundle install` process also checks for updated versions of many of the Ruby Gems needed to build the book.

The Booksquisher Docker container contains all the prerequisites for building the _Pro Git 2_ book into all the output formats. (Or at least that was true at the time I created the Docker image!) In any event, when you run `bundle install` the script checks for any missing or out of date Ruby Gems, downloads them and installs them. So if there are new requirements, the script should take care of that for you. This process should work without failing because the Booksquisher Docker image already has the required build software for the Gems to compile natively. Luckily, we only need to run `bundle install` one time to get set up for building the `progit2` source.

Be sure you are in the `/documents` directory in the Docker container, then run `bundle install`:

```console
[booksquisher]# bundle install
```

NOTE: Note that you should expect to see a warning message that says ''Don't run Bundler as root''. The Booksquisher container only has a single user, which is root. You can safely ignore this warning message.

You should expect to see output that looks similar to this:

```console
[booksquisher]# bundle install

Don't run Bundler as root. Bundler can ask for sudo if it is needed, and installing your bundle as root will break this application for all non-root users on this machine.
Fetching https://github.com/asciidoctor/asciidoctor-epub3
Fetching gem metadata from https://rubygems.org/..........
Resolving dependencies...
Using rake 12.3.2
Using Ascii85 1.0.3
Using public_suffix 3.0.3
Using addressable 2.6.0
Using afm 0.2.2
Using asciidoctor 1.5.6.1
Using mini_portile2 2.1.0
Using nokogiri 1.6.8.1
Using rubyzip 1.2.2
Using gepub 0.6.9.2
Using thread_safe 0.3.6
Using asciidoctor-epub3 1.5.0.alpha.9.dev from https://github.com/asciidoctor/asciidoctor-epub3 (at master@d42f444)
Using pdf-core 0.7.0
Using ttfunk 1.5.1
Using prawn 2.2.2
Using prawn-icon 1.3.0
Using css_parser 1.6.0
Using prawn-svg 0.27.1
Using prawn-table 0.2.2
Using hashery 2.1.2
Using ruby-rc4 0.1.5
Using pdf-reader 2.2.0
Using prawn-templates 0.1.1
Using safe_yaml 1.0.4
Using polyglot 0.3.5
Using treetop 1.5.3
Using asciidoctor-pdf 1.5.0.alpha.16
Using awesome_print 1.8.0
Using bundler 1.17.3
Using coderay 1.1.2
Using epubcheck 3.0.1
Using json 2.1.0
Using kindlegen 3.0.3
Using multi_json 1.13.1
Using pygments.rb 1.2.1
Bundle complete! 11 Gemfile dependencies, 35 gems now installed.
Use `bundle info [gemname]` to see where a bundled gem is installed.
```

Once `bundle install` is run once successfully you should not need to run it again for this book project.

Assuming all went well with bundle install, you can build all versions of the book (PDF, EPUB3, MOBI, and HTML5) with this single command:

```console
[booksquisher]# bundle exec rake book:build
```

NOTE: _Pro Git, 2nd Edition_ is a 500+ page book. Be aware that the creation of the PDF file may take a few minutes to run. The other output file formats are created quite quickly.

You should expect to see something similar to this when you run `bundle exec rake book:build`:

```console
[booksquisher]# bundle exec rake book:build

Generating contributors list
Converting to HTML...
 -- HTML output at progit.html
Converting to EPub...
/usr/lib/ruby/gems/2.4.0/gems/nokogiri-1.6.8.1/lib/nokogiri/xml/document.rb:44: warning: constant ::Fixnum is deprecated
/usr/lib/ruby/gems/2.4.0/gems/nokogiri-1.6.8.1/lib/nokogiri/xml/document.rb:44: warning: constant ::Fixnum is deprecated
 -- Epub output at progit.epub
Converting to Mobi (kf8)...
/usr/lib/ruby/gems/2.4.0/gems/nokogiri-1.6.8.1/lib/nokogiri/xml/document.rb:44: warning: constant ::Fixnum is deprecated
/usr/lib/ruby/gems/2.4.0/gems/nokogiri-1.6.8.1/lib/nokogiri/xml/document.rb:44: warning: constant ::Fixnum is deprecated
 -- Mobi output at progit.mobi
Converting to PDF... (this one takes a while)
 -- PDF output at progit.pdf
[booksquisher]#
```

You can safely ignore the `::Fixnum is deprecated` warnings. This is a known issue, and later releases of the tools within Booksquisher should eliminate this warning message. The output files are not impacted.

Look for the newly created PDF, EPUB3, MOBI (Kindle Format 8), and HTML5 book files on your local computer at the top level of the `progit2` directory created by Git (we called this directory `new-book-project` when we cloned the project with Git). The output files can also be seen in the `/documents` folder of the Booksquisher container, which is the same directory mapped to your local computer.